/* # Helpers
================================================== */

.scroll-locked {
  overflow: hidden;
  touch-action: manipulation;
}

// Flexbox

.is-flex {
  display: flex;
}

.is-inline-flex {
  display: inline-flex;
}

/* Alignment */

.is-align-start,
.is-align-left {
  align-items: flex-start;
}

.is-align-end,
.is-align-right {
  align-items: flex-end;
}

.is-align-self-end,
.is-align-self-right {
  align-self: flex-end;
}

.is-align-baseline {
  align-items: baseline;
}

.is-align-center {
  align-items: center;
}

.is-align-stretch {
  align-items: stretch;
}

/* Mobile alignment */

.is-align--mobile-start {
  @include respond-to("medium-down") {
    align-items: flex-start;
  }
}

.is-align--mobile-center {
  @include respond-to("medium-down") {
    align-items: center;
  }
}

.is-align--mobile-end {
  @include respond-to("medium-down") {
    align-items: flex-end;
  }
}

/* Justify */

.is-justify-start,
.is-justify-left {
  justify-content: flex-start;
}

.is-justify-end,
.is-justify-right {
  justify-content: flex-end;
}

.is-justify-center {
  justify-content: center;
}

.is-justify-space-around {
  justify-content: space-around;
}

.is-justify-space-between {
  justify-content: space-between;
}

/* Mobile justify */

.is-mobile-justify-start {
  @include respond-to("medium-down") {
    justify-content: flex-start;
  }
}

.is-mobile-justify-center {
  @include respond-to("medium-down") {
    justify-content: center;
  }
}

.is-mobile-justify-end {
  @include respond-to("medium-down") {
    justify-content: flex-end;
  }
}

.is-flex-nowrap {
  flex-wrap: nowrap;
}

.is-flex-wrap {
  flex-wrap: wrap;
}

.is-flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.is-flex-row {
  flex-direction: row;
}

.is-flex-row-reverse {
  flex-direction: row-reverse;
}

.is-flex-column {
  flex-direction: column;
}

.is-flex-column-reverse {
  flex-direction: column-reverse;
}

.is-flex-column--mobile {
  @include respond-to('small-down') {
    flex-direction: column;
  }
}

.is-flex-column-reverse-mobile {
  @include respond-to('small-down') {
    flex-direction: column-reverse;
  }
}

// Flex position order

.is-order-aligned-left {
  order: -1;

  @include respond-to('small-down') {
    order: inherit;
  }
}

.is-order-aligned-right {
  order: 1;

  @include respond-to('small-down') {
    order: inherit;
  }
}

// Float

.is-pulled-left {
  float: left !important;
}

.is-pulled-right {
  float: right !important;
}

// Overflow

.is-clipped {
  overflow: hidden !important;
}

// Visibility

.is-hidden {
  display: none !important;
}

.is-visible {
  display: block !important;
}

.is-sr-only {
  border: none !important;
  clip: rect(0, 0, 0, 0) !important;
  height: 0.01em !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 0.01em !important;
}

.visually-hidden {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  border: 0;
}

.is-invisible {
  visibility: hidden !important;
}

@include respond-to('small') {
  .is-hidden-small {
    display: none !important;
  }
}

@include respond-to('medium') {
  .is-hidden-medium {
    display: none !important;
  }
}


@include respond-to('large') {
  .is-hidden-large {
    display: none !important;
  }
}

@include respond-to('small-down') {
  .is-hidden-small-down {
    display: none !important;
  }
}

@include respond-to('small-up') {
  .is-hidden-small-up {
    display: none !important;
  }
}

@include respond-to('medium-down') {
  .is-hidden-mobile-only {
    display: none !important;
  }
}

@include respond-to('medium-up') {
  .is-hidden-desktop-only {
    display: none !important;
  }
}

.is-invisible {
  visibility: hidden !important;
}

// Padding helpers

.has-padding-top {
  padding-top: $gutter;
}

.has-padding-bottom {
  padding-bottom: $gutter;
}

.has-padding-left {
  padding-left: $gutter;
}

.has-padding-right {
  padding-right: $gutter;
}

.has-padding {
  padding: $gutter;
}

.has-large-padding-top {
  padding-top: calc(#{$gutter} * 2);
}

.has-large-padding-bottom {
  padding-bottom: calc(#{$gutter} * 2);
}

.has-small-padding-top {
  padding-top: calc(#{$gutter} / 2);
}

.has-small-padding-bottom {
  padding-bottom: calc(#{$gutter} / 2);
}

// Margin helpers

.has-margin-top {
  margin-top: $gutter;
}

.has-margin-bottom {
  margin-bottom: $gutter;
}

.has-margin-left {
  margin-left: $gutter;
}

.has-margin-right {
  margin-right: $gutter;
}

.has-margin {
  margin: $gutter;
}

// Border helpers

.border--true {
  border: 1px solid $border;
}

.border-top {
  border: none;
  border-top: 1px solid $border;
}

.border-bottom {
  border: none;
  border-bottom: 1px solid $border;
}

.border-right {
  border: none;
  border-right: 1px solid $border;
}

.border-left {
  border: none;
  border-left: 1px solid $border;
}

// Styling for box

.box {
  border-radius: 6px;
  box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);
}

// Can be used on inner div inside container element to apply borders (that maintain the same width as columns)

.container-border--top::before {
  display: block;
  content: '';
  height: 0;
  width: calc(100% - #{$gutter});
  border-top: thin solid liquid-object("settings.border_color");
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  margin: 0 auto;
  float: left;

  @include respond-to('small-down') {
    width: 100%;
  }
}

.container-border--bottom::after {
  display: block;
  content: '';
  height: 0;
  width: calc(100% - #{$gutter});
  border-top: thin solid liquid-object("settings.border_color");
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 0 auto;
  clear: both;

  @include respond-to('small-down') {
    width: 100%;
  }
}

// Applied to parent element to control columns on inner text

.has-columns--2 {
  column-count: 2;

  @include respond-to('small-down') {
    column-count: 1;
  }
}

.has-columns--3 {
  column-count: 3;

  @include respond-to('small-down') {
    column-count: 1;
  }
}

// Other

.is-marginless {
  margin: 0 !important;
}

.is-paddingless {
  padding: 0 !important;
}

.is-radiusless {
  border-radius: 0 !important;
}

.is-shadowless {
  box-shadow: none !important;
}

.is-unselectable {
  @extend %unselectable;
}

.is-relative {
  position: relative;
}

.is-fullwidth-mobile {
  @include respond-to('medium-down') {
    width: 100vw !important;
    padding: 20px !important;
    position: relative !important;
    left: 50% !important;
    right: 50% !important;
    margin-left: -50vw !important;
    margin-right: -50vw !important;
  }
}
