/* # Form
================================================== */

$input-color: $grey-darker !default;
$input-background-color: $white !default;
$input-border-color: $grey-lighter !default;
$input-height: $control-height !default;
$input-shadow: none;
$input-placeholder-color: rgba($input-color, 0.5) !default;

$input-hover-color: $grey-darker !default;
$input-hover-border-color: $grey-light !default;

$input-focus-color: $grey-darker !default;
$input-focus-border-color: $link !default;
$input-focus-box-shadow-size: 0 0 0 0.125em !default;
$input-focus-box-shadow-color: liquid-object("link | color_modify: 'alpha', 0.25") !default;

$input-disabled-color: $text-light !default;
$input-disabled-background-color: $background !default;
$input-disabled-border-color: $background !default;
$input-disabled-placeholder-color: rgba($input-disabled-color, 0.3) !default;

$input-arrow: $link !default;

$input-icon-color: $grey-lighter !default;
$input-icon-active-color: $grey !default;

$input-radius: $radius !default;

$file-border-color: $border !default;
$file-radius: $radius !default;

$file-cta-background-color: $white-ter !default;
$file-cta-color: $grey-dark !default;
$file-cta-hover-color: $grey-darker !default;
$file-cta-active-color: $grey-darker !default;

/*
  {% assign file_name_border_color = border_color %}
*/

$file-name-border-style: solid !default;
$file-name-border-width: 1px 1px 1px 0 !default;
$file-name-max-width: 16em !default;

$label-color: $grey-darker !default;
$label-weight: $body-weight;

$help-size: $size-small !default;

// Button border radius will determine input field border radius
$input-field-with-primary-btn-style: liquid-object("settings.button_primary_border_radius | append: 'px'");
$input-field-with-secondary-btn-style: liquid-object("settings.button_secondary_border_radius | append: 'px'");
$textarea-with-primary-btn-style: liquid-object("settings.button_primary_border_radius | at_most: 5 | append: 'px'");
$textarea-with-secondary-btn-style: liquid-object("settings.button_secondary_border_radius | at_most: 5 | append: 'px'");

@mixin input {
  @extend %control;

  background-color: $input-background-color;
  border-color: $input-border-color;
  color: $input-color;

  @include placeholder {
    color: $input-placeholder-color;
  }


  &:hover,
  &.is-hovered {
    border-color: $input-hover-border-color;
  }

  &:focus,
  &.is-focused,
  &:active,
  &.is-active {
    border-color: $input-focus-border-color;
    box-shadow: $input-focus-box-shadow-size $input-focus-box-shadow-color;
  }

  &[disabled],
  fieldset[disabled] & {
    background-color: $input-disabled-background-color;
    border-color: $input-disabled-border-color;
    box-shadow: none;
    color: $input-disabled-color;

    @include placeholder {
      color: $input-disabled-placeholder-color;
    }
  }
}

.input,
.textarea {
  @include input;

  box-shadow: $input-shadow;
  max-width: 100%;
  width: 100%;

  &[readonly] {
    box-shadow: none;
  }

  // Sizes
  &.is-small {
    @include control-small;
  }

  &.is-medium {
    @include control-medium;
  }

  &.is-large {
    @include control-medium; // Consistent with button size
    height: 2em;
  }

  // Modifiers
  &.is-fullwidth {
    display: block;
    width: 100%;
  }

  &.is-inline {
    display: inline;
    width: auto;
  }
}

.input {
  &.is-rounded {
    border-radius: $radius-rounded;
    padding-left: 1em;
    padding-right: 1em;
  }

  &.is-static {
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
    padding-left: 0;
    padding-right: 0;
  }

  &.is-primary-btn-style {
    border-radius: $input-field-with-primary-btn-style;
    padding-left: 1em;
    padding-right: 1em;
  }

  &.is-secondary-btn-style {
    border-radius: $input-field-with-secondary-btn-style;
    padding-left: 1em;
    padding-right: 1em;
  }
}

.textarea {
  display: block;
  max-width: 100%;
  min-width: 100%;
  padding: 0.625em;
  resize: vertical;

  &:not([rows]) {
    max-height: 600px;
    min-height: 120px;
  }

  &[rows] {
    height: initial;
  }

  // Modifiers
  &.has-fixed-size {
    resize: none;
  }

  &.is-rounded {
    border-radius: 5px;
  }

  &.is-primary-btn-style {
    border-radius: $textarea-with-primary-btn-style;
    padding-left: 1em;
    padding-right: 1em;
  }

  &.is-secondary-btn-style {
    border-radius: $textarea-with-secondary-btn-style;
    padding-left: 1em;
    padding-right: 1em;
  }
}

.checkbox,
.radio {
  cursor: pointer;
  display: inline-block;
  line-height: 1.25;
  position: relative;

  input {
    cursor: pointer;
  }

  &:hover {
    color: $input-hover-color;
  }

  &[disabled],
  fieldset[disabled] & {
    color: $input-disabled-color;
    cursor: not-allowed;
  }
}

.radio {
  & + .radio {
    margin-left: 0.5em;
  }
}

.select {
  position: relative;
  display: inline-block;
  width: min-content;
  max-width: 100%;
  vertical-align: top;

  &:not(.is-multiple) {
    height: $input-height;
  }

  &:not(.is-multiple):not(.is-loading):not(.is-arrowless) {
    &::after {
      @extend %arrow;

      border-color: $input-arrow;
      right: 1.125em;
      z-index: 4;
    }
  }

  &.is-rounded {
    select {
      border-radius: $radius-rounded;
      padding-left: 1em;
    }
  }

  &.is-primary-btn-style {
    select {
      border-radius: $input-field-with-primary-btn-style;
      padding-left: 1em;
    }
  }

  &.is-secondary-btn-style {
    select {
      border-radius: $input-field-with-secondary-btn-style;
      padding-left: 1em;
    }
  }

  &.is-wide {
    width: 100%;
    select {
      width: inherit;
    }
  }

  select {
    @include input;

    cursor: pointer;
    display: block;
    font-size: 1em;
    max-width: 100%;
    outline: none;

    &::-ms-expand {
      display: none;
    }

    &[disabled]:hover,
    fieldset[disabled] &:hover {
      border-color: $input-disabled-border-color;
    }

    &:not([multiple]):not(.is-arrowless) {
      padding-right: 2.5em;
    }

    &[multiple] {
      height: auto;
      padding: 0;

      option {
        padding: 0.5em 1em;
      }
    }
  }

  // States
  &:not(.is-multiple):not(.is-loading):hover {
    &::after {
      border-color: $input-hover-color;
    }
  }

  // Sizes
  &.is-small {
    @include control-small;
  }

  &.is-medium {
    @include control-medium;
  }

  &.is-large {
    @include control-medium; // Consistent with button size
  }

  // Modifiers
  &.is-disabled {
    &::after {
      border-color: $input-disabled-color;
    }
  }

  &.is-fullwidth {
    width: 100%;

    select {
      width: 100%;
    }
  }

  &.is-loading {
    &::after {
      @extend %loader;

      margin-top: 0;
      position: absolute;
      right: 0.625em;
      top: 0.625em;
      transform: none;
    }

    &.is-small:after {
      font-size: $size-small;
    }

    &.is-medium:after {
      font-size: $size-medium;
    }

    &.is-large:after {
      font-size: $size-large;
    }
  }
}

.file {
  @extend %unselectable;

  align-items: stretch;
  display: flex;
  justify-content: flex-start;
  position: relative;

  // Sizes
  &.is-small {
    font-size: $size-small;
  }

  &.is-medium {
    font-size: $size-medium;

    .file-icon {
      .fa {
        font-size: 21px;
      }
    }
  }

  &.is-large {
    font-size: $size-large;

    .file-icon {
      .fa {
        font-size: 28px;
      }
    }
  }

  // Modifiers
  &.has-name {
    .file-cta {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }

    .file-name {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }

    &.is-empty {
      .file-cta {
        border-radius: $file-radius;
      }

      .file-name {
        display: none;
      }
    }
  }

  &.is-boxed {
    .file-label {
      flex-direction: column;
    }

    .file-cta {
      flex-direction: column;
      height: auto;
      padding: 1em 3em;
    }

    .file-name {
      border-width: 0 1px 1px;
    }

    .file-icon {
      height: 1.5em;
      width: 1.5em;

      .fa {
        font-size: 21px;
      }
    }

    &.is-small {
      .file-icon .fa {
        font-size: 14px;
      }
    }

    &.is-medium {
      .file-icon .fa {
        font-size: 28px;
      }
    }

    &.is-large {
      .file-icon .fa {
        font-size: 35px;
      }
    }

    &.has-name {
      .file-cta {
        border-radius: $file-radius $file-radius 0 0;
      }

      .file-name {
        border-radius: 0 0 $file-radius $file-radius;
        border-width: 0 1px 1px;
      }
    }
  }

  &.is-center {
    justify-content: center;
  }

  &.is-fullwidth {
    .file-label {
      width: 100%;
    }

    .file-name {
      flex-grow: 1;
      max-width: none;
    }
  }

  &.is-right {
    justify-content: flex-end;

    .file-cta {
      border-radius: 0 $file-radius $file-radius 0;
    }

    .file-name {
      border-radius: $file-radius 0 0 $file-radius;
      border-width: 1px 0 1px 1px;
      order: -1;
    }
  }
}

.file-label {
  align-items: stretch;
  display: flex;
  cursor: pointer;
  justify-content: flex-start;
  overflow: hidden;
  position: relative;

  &:hover {
    .file-cta {
      background-color: darken($file-cta-background-color, 2.5%);
      color: $file-cta-hover-color;
    }

    .file-name {
      border-color: liquid-object("file_name_border_color | color_darken: 2.5");
    }
  }

  &:active {
    .file-cta {
      background-color: darken($file-cta-background-color, 5%);
      color: $file-cta-active-color;
    }

    .file-name {
      border-color: liquid-object("file_name_border_color | color_darken: 5");
    }
  }
}

.file-input {
  height: 100%;
  left: 0;
  opacity: 0;
  outline: none;
  position: absolute;
  top: 0;
  width: 100%;
}

.file-cta,
.file-name {
  @extend %control;

  border-color: $file-border-color;
  border-radius: $file-radius;
  font-size: 1em;
  padding-left: 1em;
  padding-right: 1em;
  white-space: nowrap;
}

.file-cta {
  background-color: $file-cta-background-color;
  color: $file-cta-color;
}

.file-name {
  border-color: liquid-object("file_name_border_color");
  border-style: $file-name-border-style;
  border-width: $file-name-border-width;
  display: block;
  max-width: $file-name-max-width;
  overflow: hidden;
  text-align: left;
  text-overflow: ellipsis;
}

.file-icon {
  align-items: center;
  display: flex;
  height: 1em;
  justify-content: center;
  margin-right: 0.5em;
  width: 1em;

  .fa {
    font-size: 14px;
  }
}

.label,
.selector-wrapper label {
  color: $label-color;
  display: block;
  font-size: $size-normal;
  font-weight: $label-weight;

  &:not(:last-child) {
    margin-bottom: 0.5em;
  }

  // Sizes
  &.is-small {
    font-size: $size-small;
  }

  &.is-medium {
    font-size: $size-medium;
  }

  &.is-large {
    font-size: $size-large;
  }
}

.help {
  display: block;
  font-size: $help-size;
  margin-top: 0.25rem;
}

// Containers

.field {
  &:not(:last-child) {
    margin-bottom: 0.75rem;
  }

  // Modifiers
  &.has-addons {
    display: flex;
    justify-content: flex-start;

    .control {
      &:not(:last-child) {
        margin-right: -1px;
      }

      &:not(:first-child):not(:last-child) {
        .button,
        .input,
        .select select {
          border-radius: 0;
        }
      }

      &:first-child:not(:only-child) {
        .button,
        .input,
        .select select {
          border-bottom-right-radius: 0;
          border-top-right-radius: 0;
        }
      }

      &:last-child:not(:only-child) {
        .button,
        .input,
        .select select {
          border-bottom-left-radius: 0;
          border-top-left-radius: 0;
        }
      }

      .button,
      .input,
      .select select {
        &:not([disabled]) {
          &:hover,
          &.is-hovered {
            z-index: 2;
          }

          &:focus,
          &.is-focused,
          &:active,
          &.is-active {
            z-index: 3;

            &:hover {
              z-index: 4;
            }
          }
        }
      }

      &.is-expanded {
        flex-grow: 1;
      }
    }

    &.has-addons-center {
      justify-content: center;
    }

    &.has-addons-right {
      justify-content: flex-end;
    }

    &.has-addons-fullwidth {
      .control {
        flex-grow: 1;
        flex-shrink: 0;
      }
    }
  }

  &.is-grouped {
    display: flex;
    justify-content: flex-start;

    & > .control {
      flex-shrink: 0;

      &:not(:last-child) {
        margin-bottom: 0;
        margin-right: 0.75rem;
      }

      &.is-expanded {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }

    &.is-grouped-center {
      justify-content: center;
    }

    &.is-grouped-right {
      justify-content: flex-end;
    }

    &.is-grouped-multiline {
      flex-wrap: wrap;

      & > .control {
        &:last-child,
        &:not(:last-child) {
          margin-bottom: 0.75rem;
        }
      }

      &:last-child {
        margin-bottom: -0.75rem;
      }

      &:not(:last-child) {
        margin-bottom: 0;
      }
    }
  }

  &.is-horizontal {

    @include respond-to('medium-up') {
      display: flex;
    }
  }
}

.field-label {
  .label {
    font-size: inherit;
  }

  @include respond-to('small-up') {
    margin-bottom: 0.5rem;
  }

  @include respond-to('medium-up') {
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 0;
    margin-right: 1.5rem;
    text-align: right;

    &.is-small {
      font-size: $size-small;
      padding-top: 0.375em;
    }

    &.is-normal {
      padding-top: 0.375em;
    }

    &.is-medium {
      font-size: $size-medium;
      padding-top: 0.375em;
    }

    &.is-large {
      font-size: $size-large;
      padding-top: 0.375em;
    }
  }
}

.field-body {
  .field .field {
    margin-bottom: 0;
  }

  @include respond-to('medium-up') {
    display: flex;
    flex-basis: 0;
    flex-grow: 5;
    flex-shrink: 1;

    .field {
      margin-bottom: 0;
    }

    & > .field {
      flex-shrink: 1;

      &:not(.is-narrow) {
        flex-grow: 1;
      }

      &:not(:last-child) {
        margin-right: 0.75rem;
      }
    }
  }
}

.control {
  box-sizing: border-box;
  clear: both;
  font-size: $size-normal;
  position: relative;
  text-align: left;

  // Modifiers
  &.has-icons-left,
  &.has-icons-right {
    .input,
    .select {
      &:focus {
        & ~ .icon {
          color: $input-icon-active-color;
        }
      }

      &.is-small ~ .icon {
        font-size: $size-very-small;
      }

      &.is-regular ~ .icon {
        font-size: $size-small;
      }

      &.is-medium ~ .icon {
        font-size: $size-normal;
      }

      &.is-large ~ .icon {
        font-size: $size-medium;
      }
    }

    .icon {
      color: $input-icon-color;
      height: 1.5em;
      pointer-events: none;
      position: absolute;
      top: 0;
      width: 1.8em;
      vertical-align: middle;
      z-index: 4;
    }
  }

  &.has-icons-left {
    .input,
    .select select {
      padding-left: $input-height;
    }

    .icon {
      left: 0;
      top: 50%;
      transform: translate(40%, -50%);
    }
  }

  &.has-icons-right {
    .input,
    .select select {
      padding-right: $input-height;
    }

    .icon {
      right: 0;
      &.is-right {
        left: initial;
      }
    }
  }

  &.is-loading {
    &::after {
      @extend %loader;

      position: absolute !important;
      right: 0.625em;
      top: 0.625em;
      z-index: 4;
    }

    &.is-small:after {
      font-size: $size-small;
    }

    &.is-medium:after {
      font-size: $size-medium;
    }

    &.is-large:after {
      font-size: $size-large;
    }
  }
}

.newsletter-section {

  &.has-background {
    background-size: cover;
    background-repeat:no-repeat;
    background-position: center center;
  }

  &.newsletter-section--is-width-half {
    @include respond-to('medium-down') {
      height: auto;
    }
  }

  .dark-overlay-true {
    position: static;
  }

  &.has-full-width-crop {
    @include respond-to('medium-up') {
      padding: 0;

      .column {
        margin: 0;
        width: 100%;
      }

      .newsletter__wrapper {
        max-width: 100%;
      }
    }
  }

  // Pop-up styles

  &.newsletter-section--popup {
    margin: 0;
    padding: 0;
    width: 100%;
    max-width: none;

    .newsletter__wrapper {
      max-width: 100%;
      padding: 2em 2em 0 2em;
    }
  }
}

.newsletter__image--mobile-wrapper {
  display: none;

  &.has-image-crop {
    padding-bottom: 100%;

    img {
      position: absolute;
    }
  }

  @include respond-to('medium-down') {
    display: block;
    overflow: hidden;
    position: relative;
  }
}

.newsletter-container {
  display: flex;
  justify-content: center;
  flex-wrap: nowrap;
  align-self: normal;
  width: 100%;
  z-index: 3;
  position: relative;
}

.newsletter-form {
  &.is-responsive {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
  }

  .field {
    justify-content: center;
    flex: 1 0 100%;
    margin-bottom: 20px;

    &.is-stretched-width {
      flex: 3 0 50%;
      min-width: 200px;
      max-width: 100%;
    }

    &.is-default-width {
      flex: 1 0 auto;
      min-width: 150px;
    }

    &.is-default-width .button {
      width: 100%;
    }

    &.is-full-width {
      flex-basis: 100%;
    }

    label {
      text-align: left;
    }

    .control {
      width: calc(100% - 12px);

      @include respond-to('medium-down') {
        width: 100%;
      }
    }
  }
}

.newsletter__image {
  position: relative;

  img {
    position: absolute;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;

    @include respond-to('medium-down') {
      position: static;
    }
  }

  &.image-crop--none img {
    object-fit: contain;
    object-position: center;
  }

  @include respond-to('medium-down') {
    display: none;
  }
}

.is-active-image {
  @include respond-to('medium-up') {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
}

.newsletter__wrapper {
  padding: 40px;
  max-width: 55%;

  @include respond-to('small-down') {
    max-width: 100%;
  }
}

.newsletter__text-wrapper {
  width: calc(100% - 12px);
}

.newsletter__subheading {
  margin-bottom: 20px;
}

.contact-form__form-errors {
  .form__error {
    margin-bottom: 15px;
    background: $yellow;

    strong {
      font-weight: 400;
    }
  }
}

.button,
.input,
.textarea,
.select select {
  @include respond-to('small-down') {
    font-size: 16px !important; //overwrites to prevent default iOS zooming
  }
}
