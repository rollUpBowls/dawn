/* # Grid/layout
================================================== */

.index {
  display: flex;
  flex-wrap: wrap;
}

#template-index {
  width: 100%;
}

// Home page sections are set to flex so that half sizes may sit side-by-side

.index-sections {
  overflow: hidden;
}

.dynamic-sections {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  width: 100%;
}

// Controls the width and spacing of each section - the class ".shopify-section" is generated by Shopify and applied to each element (along with unique ID) - uses CSS variables which are set in liquid files
.shopify-section {
  width: 100%;
  @include respond-to('small-down') {
    width: 100% !important;
    padding-left: 0 !important; // Ignores padding set on larger screen sizes
    padding-right: 0 !important; // Ignores padding set on larger screen sizes
  }
}

// Handles the background color and margins depending on what width has been chosen
.section {
  max-width: $site-max-width;
  width: $site-width;
  margin-left: auto;
  margin-right: auto;

  &.has-background {
    width: calc(#{$site-width} - #{$gutter});
    max-width: calc(#{$site-max-width} - #{$gutter});
    padding-left: calc(#{$gutter} / 2);
    padding-right: calc(#{$gutter} / 2);
  }

  &.is-width-half {
    height: 100%;
    display: flex;
    align-items: center;
    width: 100%;
    max-width: none;

    @include respond-to('medium-down') {
      width: 100%;
    }

    .container.small-down--has-limit {
      @include respond-to('small-down') {
        max-width: $site-max-width;
        width: $site-width;
      }
    }

  }

  &.is-width-wide {
    width: 100%;
    max-width: none;

    .container.has-limit {
      max-width: $site-max-width;
      width: $site-width;

      @include respond-to('small-down') {
        width: 100%;
      }

    }

    .container.small-down--has-limit {
      @include respond-to('small-down') {
        max-width: $site-max-width;
        width: $site-width;
      }
    }

  }
}

.section.section__wrapper {
  @include respond-to('small-down') {
    max-width: $site-max-width;
    width: $site-width;
  }
}

// Parent container for column elements - uses flexbox, so this container can be made smaller and the columns will shrink in relation

.container {
  position: relative;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
  flex: auto;

  .column,
  .columns {
    margin-left: calc(#{$gutter} / 2);
    margin-right: calc(#{$gutter} / 2);
  }

  &.is-small {
    width: 50%;

    @include respond-to('small-down') {
      width: 60%;
    }
  }

  &.is-medium {
    width: 70%;

    @include respond-to('small-down') {
      width: 80%;
    }
  }

  // Adds padding to bottom of columns - used for grid-type layouts

  &.has-column-padding-bottom {
    .column,
    .columns {
      margin-bottom: $gutter;
    }
  }

}

// Applies flex styling for columns created using Content Creator
.row {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: $gutter;

  .column,
  .columns {
    @include respond-to('medium-down') {
      width: 100%;
      margin-left: 0;
      margin-right: 0;
    }
  }


}

[class*="offset-by"] {
  position: relative;

  @include respond-to('small-down') {
    position: static;
  }
}

// Add gutter on mobile devices
.has-gutter-enabled .has-gutter--mobile {
  @include respond-to('medium-down') {
    margin-bottom: $gutter;
  }
}

// Add gutter when blocks drop to second row
.has-gutter-enabled.has-multirow-blocks .has-gutter {
  margin-bottom: $gutter;
}

@mixin container-column-generator($breakpoint: '') {

    .#{$breakpoint}hidden {
      display: none !important;
    }

    .#{$breakpoint}visible {
      display: block !important;
    }

    // Base Grid
    .#{$breakpoint}one                     { width: calc(#{percentage(math.div(1, 16))} - #{$gutter});}
    .#{$breakpoint}two                     { width: calc(#{percentage(math.div(2, 16))} - #{$gutter});}
    .#{$breakpoint}three                   { width: calc(#{percentage(math.div(3, 16))} - #{$gutter});}
    .#{$breakpoint}four                    { width: calc(#{percentage(math.div(4, 16))} - #{$gutter});}
    .#{$breakpoint}five                    { width: calc(#{percentage(math.div(5, 16))} - #{$gutter});}
    .#{$breakpoint}six                     { width: calc(#{percentage(math.div(6, 16))} - #{$gutter});}
    .#{$breakpoint}seven                   { width: calc(#{percentage(math.div(7, 16))} - #{$gutter});}
    .#{$breakpoint}eight                   { width: calc(#{percentage(math.div(8, 16))} - #{$gutter});}
    .#{$breakpoint}nine                    { width: calc(#{percentage(math.div(9, 16))} - #{$gutter});}
    .#{$breakpoint}ten                     { width: calc(#{percentage(math.div(10, 16))} - #{$gutter});}
    .#{$breakpoint}eleven                  { width: calc(#{percentage(math.div(11, 16))} - #{$gutter});}
    .#{$breakpoint}twelve                  { width: calc(#{percentage(math.div(12, 16))} - #{$gutter});}
    .#{$breakpoint}thirteen                { width: calc(#{percentage(math.div(13, 16))} - #{$gutter});}
    .#{$breakpoint}fourteen                { width: calc(#{percentage(math.div(14, 16))} - #{$gutter});}
    .#{$breakpoint}fifteen                 { width: calc(#{percentage(math.div(15, 16))} - #{$gutter});}
    .#{$breakpoint}sixteen                 { width: calc(#{percentage(math.div(16, 16))} - #{$gutter});}

    // Whole
    .#{$breakpoint}one-whole {
      width: calc(100% - #{$gutter});
    }

    // Halves
    .#{$breakpoint}one-half { width: calc(#{percentage(1 * 0.5)} - #{$gutter}); }

    // Thirds
    .#{$breakpoint}one-third { width: calc(#{percentage(math.div(1, 3))} - #{$gutter}); }
    .#{$breakpoint}two-thirds { width: calc(#{percentage(math.div(2, 3))} - #{$gutter}); }

    // Fourths
    .#{$breakpoint}one-fourth { width: calc(#{percentage(1 * 0.25)} - #{$gutter}); }
    .#{$breakpoint}two-fourths { width: calc(#{percentage(2 * 0.25)} - #{$gutter}); }
    .#{$breakpoint}three-fourths { width: calc(#{percentage(3 * 0.25)} - #{$gutter}); }

    // Fifths
    .#{$breakpoint}one-fifth { width: calc(#{percentage(1 * 0.2)} - #{$gutter}); }
    .#{$breakpoint}two-fifths { width: calc(#{percentage(2 * 0.2)} - #{$gutter}); }
    .#{$breakpoint}three-fifths { width: calc(#{percentage(3 * 0.2)} - #{$gutter}); }
    .#{$breakpoint}four-fifths { width: calc(#{percentage(4 * 0.2)} - #{$gutter}); }

    // Sixths
    .#{$breakpoint}one-sixth { width: calc(#{percentage(math.div(1, 6))} - #{$gutter}); }
    .#{$breakpoint}two-sixths { width: calc(#{percentage(math.div(2, 6))} - #{$gutter}); }
    .#{$breakpoint}three-sixths { width: calc(#{percentage(math.div(3, 6))} - #{$gutter}); }
    .#{$breakpoint}four-sixths { width: calc(#{percentage(math.div(4, 6))} - #{$gutter}); }
    .#{$breakpoint}five-sixths { width: calc(#{percentage(math.div(5, 6))} - #{$gutter}); }

    // Sevenths
    .#{$breakpoint}one-seventh { width: calc(#{percentage(math.div(1, 7))} - #{$gutter}); }
    .#{$breakpoint}two-sevenths { width: calc(#{percentage(math.div(2, 7))} - #{$gutter}); }
    .#{$breakpoint}three-sevenths { width: calc(#{percentage(math.div(3, 7))} - #{$gutter}); }
    .#{$breakpoint}four-sevenths { width: calc(#{percentage(math.div(4, 7))} - #{$gutter}); }
    .#{$breakpoint}five-sevenths { width: calc(#{percentage(math.div(5, 7))} - #{$gutter}); }

    // Eighths
    .#{$breakpoint}one-eighth { width: calc(#{percentage(1 * 0.125)} - #{$gutter}); }
    .#{$breakpoint}two-eighths { width: calc(#{percentage(2 * 0.125)} - #{$gutter}); }
    .#{$breakpoint}three-eighths { width: calc(#{percentage(3 * 0.125)} - #{$gutter}); }
    .#{$breakpoint}four-eighths { width: calc(#{percentage(4 * 0.125)} - #{$gutter}); }
    .#{$breakpoint}five-eighths { width: calc(#{percentage(5 * 0.125)} - #{$gutter}); }
    .#{$breakpoint}six-eighths { width: calc(#{percentage(6 * 0.125)} - #{$gutter}); }
    .#{$breakpoint}seven-eighths { width: calc(#{percentage(7 * 0.125)} - #{$gutter}); }

    // Tenths
    .#{$breakpoint}one-tenth { width: calc(#{percentage(1 * 0.1)} - #{$gutter}); }
    .#{$breakpoint}two-tenths { width: calc(#{percentage(2 * 0.1)} - #{$gutter}); }
    .#{$breakpoint}three-tenths { width: calc(#{percentage(3 * 0.1)} - #{$gutter}); }
    .#{$breakpoint}four-tenths { width: calc(#{percentage(4 * 0.1)} - #{$gutter}); }
    .#{$breakpoint}five-tenths { width: calc(#{percentage(5 * 0.1)} - #{$gutter}); }
    .#{$breakpoint}six-tenths { width: calc(#{percentage(6 * 0.1)} - #{$gutter}); }
    .#{$breakpoint}seven-tenths { width: calc(#{percentage(7 * 0.1)} - #{$gutter}); }
    .#{$breakpoint}eight-tenths { width: calc(#{percentage(8 * 0.1)} - #{$gutter}); }
    .#{$breakpoint}nine-tenths { width: calc(#{percentage(9 * 0.1)} - #{$gutter}); }

    // Twelfths
    .#{$breakpoint}one-twelfth { width: calc(#{percentage(math.div(1, 12))} - #{$gutter}); }
    .#{$breakpoint}two-twelfths { width: calc(#{percentage(math.div(2, 12))} - #{$gutter}); }
    .#{$breakpoint}three-twelfths { width: calc(#{percentage(math.div(3, 12))} - #{$gutter}); }
    .#{$breakpoint}four-twelfths { width: calc(#{percentage(math.div(4, 12))} - #{$gutter}); }
    .#{$breakpoint}five-twelfths { width: calc(#{percentage(math.div(5, 12))} - #{$gutter}); }
    .#{$breakpoint}six-twelfths { width: calc(#{percentage(math.div(6, 12))} - #{$gutter}); }
    .#{$breakpoint}seven-twelfths { width: calc(#{percentage(math.div(7, 12))} - #{$gutter}); }
    .#{$breakpoint}eight-twelfths { width: calc(#{percentage(math.div(8, 12))} - #{$gutter}); }
    .#{$breakpoint}nine-twelfths { width: calc(#{percentage(math.div(9, 12))} - #{$gutter}); }
    .#{$breakpoint}ten-twelfths { width: calc(#{percentage(math.div(10, 12))} - #{$gutter}); }
    .#{$breakpoint}eleven-twelfths { width: calc(#{percentage(math.div(11, 12))} - #{$gutter}); }

    // Offsets
    .#{$breakpoint}offset-by-one                   { left: calc(#{percentage(math.div(1, 16))});}
    .#{$breakpoint}offset-by-two                   { left: calc(#{percentage(math.div(2, 16))});}
    .#{$breakpoint}offset-by-three                 { left: calc(#{percentage(math.div(3, 16))});}
    .#{$breakpoint}offset-by-four                  { left: calc(#{percentage(math.div(4, 16))});}
    .#{$breakpoint}offset-by-five                  { left: calc(#{percentage(math.div(5, 16))});}
    .#{$breakpoint}offset-by-six                   { left: calc(#{percentage(math.div(6, 16))});}
    .#{$breakpoint}offset-by-seven                 { left: calc(#{percentage(math.div(7, 16))});}
    .#{$breakpoint}offset-by-eight                 { left: calc(#{percentage(math.div(8, 16))});}
    .#{$breakpoint}offset-by-nine                  { left: calc(#{percentage(math.div(9, 16))});}
    .#{$breakpoint}offset-by-ten                   { left: calc(#{percentage(math.div(10, 16))});}
    .#{$breakpoint}offset-by-eleven                { left: calc(#{percentage(math.div(11, 16))});}
    .#{$breakpoint}offset-by-twelve                { left: calc(#{percentage(math.div(12, 16))});}
    .#{$breakpoint}offset-by-thirteen              { left: calc(#{percentage(math.div(13, 16))});}
    .#{$breakpoint}offset-by-fourteen              { left: calc(#{percentage(math.div(14, 16))});}
    .#{$breakpoint}offset-by-fifteen               { left: calc(#{percentage(math.div(15, 16))});}

    // Remove gutter on first and last column (must be consistent size)

    .equal-columns--outside-trim {
      .#{$breakpoint}one-half:nth-of-type(2n),
      .#{$breakpoint}eight:nth-of-type(2n),
      .#{$breakpoint}one-third:nth-of-type(3n),
      .#{$breakpoint}one-fourth:nth-of-type(4n),
      .#{$breakpoint}four:nth-of-type(4n),
      .#{$breakpoint}one-fifth:nth-of-type(5n),
      .#{$breakpoint}one-sixth:nth-of-type(6n),
      .#{$breakpoint}one-seventh:nth-of-type(7n),
      .#{$breakpoint}two:nth-of-type(8n) {
        margin-right: 0;
      }
      .#{$breakpoint}one-half:nth-of-type(2n+1),
      .#{$breakpoint}eight:nth-of-type(2n+1),
      .#{$breakpoint}one-third:nth-of-type(3n+1),
      .#{$breakpoint}one-fourth:nth-of-type(4n+1),
      .#{$breakpoint}four:nth-of-type(4n+1),
      .#{$breakpoint}one-fifth:nth-of-type(5n+1),
      .#{$breakpoint}one-sixth:nth-of-type(6n+1),
      .#{$breakpoint}one-seventh:nth-of-type(7n+1),
      .#{$breakpoint}two:nth-of-type(8n+1) {
        margin-left: 0;
      }

      @if $breakpoint == 'large-down--' {
        @include respond-to('large-down') {

          // Reset previous margins
          .#{$breakpoint}one-half.#{$breakpoint}one-half,
          .#{$breakpoint}eight.#{$breakpoint}eight,
          .#{$breakpoint}one-third.#{$breakpoint}one-third,
          .#{$breakpoint}one-fourth.#{$breakpoint}one-fourth,
          .#{$breakpoint}four.#{$breakpoint}four,
          .#{$breakpoint}one-fifth.#{$breakpoint}one-fifth,
          .#{$breakpoint}one-sixth.#{$breakpoint}one-sixth,
          .#{$breakpoint}one-seventh.#{$breakpoint}one-seventh,
          .#{$breakpoint}two.#{$breakpoint}two {
            margin-right: #{$gutter};
            margin-left: #{$gutter};
          }
          //Set new margins on right
          .#{$breakpoint}one-half:nth-of-type(2n),
          .#{$breakpoint}eight:nth-of-type(2n),
          .#{$breakpoint}one-third:nth-of-type(3n),
          .#{$breakpoint}one-fourth:nth-of-type(4n),
          .#{$breakpoint}four:nth-of-type(4n),
          .#{$breakpoint}one-fifth:nth-of-type(5n),
          .#{$breakpoint}one-sixth:nth-of-type(6n),
          .#{$breakpoint}one-seventh:nth-of-type(7n),
          .#{$breakpoint}two:nth-of-type(8n) {
            margin-right: 0;
          }
          //Set new margins on left
          .#{$breakpoint}one-half:nth-of-type(2n+1),
          .#{$breakpoint}eight:nth-of-type(2n+1),
          .#{$breakpoint}one-third:nth-of-type(3n+1),
          .#{$breakpoint}one-fourth:nth-of-type(4n+1),
          .#{$breakpoint}four:nth-of-type(4n+1),
          .#{$breakpoint}one-fifth:nth-of-type(5n+1),
          .#{$breakpoint}one-sixth:nth-of-type(6n+1),
          .#{$breakpoint}one-seventh:nth-of-type(7n+1),
          .#{$breakpoint}two:nth-of-type(8n+1) {
            margin-left: 0;
          }
        }
      }

      @if $breakpoint == 'medium-down--' {
        @include respond-to('medium-down') {
          //Reset previous margins
          .#{$breakpoint}one-half.#{$breakpoint}one-half,
          .#{$breakpoint}eight.#{$breakpoint}eight,
          .#{$breakpoint}one-third.#{$breakpoint}one-third,
          .#{$breakpoint}one-fourth.#{$breakpoint}one-fourth,
          .#{$breakpoint}four.#{$breakpoint}four,
          .#{$breakpoint}one-fifth.#{$breakpoint}one-fifth,
          .#{$breakpoint}one-sixth.#{$breakpoint}one-sixth,
          .#{$breakpoint}one-seventh.#{$breakpoint}one-seventh,
          .#{$breakpoint}two.#{$breakpoint}two {
            margin-right: #{$gutter};
            margin-left: #{$gutter};
          }
          //Set new margins on right
          .#{$breakpoint}one-half:nth-of-type(2n),
          .#{$breakpoint}eight:nth-of-type(2n),
          .#{$breakpoint}one-third:nth-of-type(3n),
          .#{$breakpoint}one-fourth:nth-of-type(4n),
          .#{$breakpoint}four:nth-of-type(4n),
          .#{$breakpoint}one-fifth:nth-of-type(5n),
          .#{$breakpoint}one-sixth:nth-of-type(6n),
          .#{$breakpoint}one-seventh:nth-of-type(7n),
          .#{$breakpoint}two:nth-of-type(8n) {
            margin-right: 0;
          }
          //Set new margins on left
          .#{$breakpoint}one-half:nth-of-type(2n+1),
          .#{$breakpoint}eight:nth-of-type(2n+1),
          .#{$breakpoint}one-third:nth-of-type(3n+1),
          .#{$breakpoint}one-fourth:nth-of-type(4n+1),
          .#{$breakpoint}four:nth-of-type(4n+1),
          .#{$breakpoint}one-fifth:nth-of-type(5n+1),
          .#{$breakpoint}one-sixth:nth-of-type(6n+1),
          .#{$breakpoint}one-seventh:nth-of-type(7n+1),
          .#{$breakpoint}two:nth-of-type(8n+1) {
            margin-left: 0;
          }
        }
      }

      @if $breakpoint == 'small-down--' {
        @include respond-to('small-down') {
          //Reset previous margins
          .#{$breakpoint}one-half.#{$breakpoint}one-half,
          .#{$breakpoint}eight.#{$breakpoint}eight,
          .#{$breakpoint}one-third.#{$breakpoint}one-third,
          .#{$breakpoint}one-fourth.#{$breakpoint}one-fourth,
          .#{$breakpoint}four.#{$breakpoint}four,
          .#{$breakpoint}one-fifth.#{$breakpoint}one-fifth,
          .#{$breakpoint}one-sixth.#{$breakpoint}one-sixth,
          .#{$breakpoint}one-seventh.#{$breakpoint}one-seventh,
          .#{$breakpoint}two.#{$breakpoint}two {
            margin-right: #{$gutter};
            margin-left: #{$gutter};
          }
          //Set new margins on right
          .#{$breakpoint}one-half:nth-of-type(2n),
          .#{$breakpoint}eight:nth-of-type(2n),
          .#{$breakpoint}one-third:nth-of-type(3n),
          .#{$breakpoint}one-fourth:nth-of-type(4n),
          .#{$breakpoint}four:nth-of-type(4n),
          .#{$breakpoint}one-fifth:nth-of-type(5n),
          .#{$breakpoint}one-sixth:nth-of-type(6n),
          .#{$breakpoint}one-seventh:nth-of-type(7n),
          .#{$breakpoint}two:nth-of-type(8n) {
            margin-right: 0;
          }
          //Set new margins on left
          .#{$breakpoint}one-half:nth-of-type(2n+1),
          .#{$breakpoint}eight:nth-of-type(2n+1),
          .#{$breakpoint}one-third:nth-of-type(3n+1),
          .#{$breakpoint}one-fourth:nth-of-type(4n+1),
          .#{$breakpoint}four:nth-of-type(4n+1),
          .#{$breakpoint}one-fifth:nth-of-type(5n+1),
          .#{$breakpoint}one-sixth:nth-of-type(6n+1),
          .#{$breakpoint}one-seventh:nth-of-type(7n+1),
          .#{$breakpoint}two:nth-of-type(8n+1) {
            margin-left: 0;
          }
        }
      }

      .#{$breakpoint}one-whole:nth-of-type(1n+1) {
        width: 100%;
        margin-right: 0;
        margin-left: 0;
      }

      .#{$breakpoint}one-half { width: calc(#{percentage(1 * 0.5)} - (#{$gutter}));}
      .#{$breakpoint}one-third { width: calc(#{percentage(math.div(1, 3))} - (#{$gutter} - (#{$gutter} / 3)));}
      .#{$breakpoint}one-fifth { width: calc(#{percentage(1 * 0.2)} - (#{$gutter} - (#{$gutter} / 5)));}
      .#{$breakpoint}one-fourth { width: calc(#{percentage(1 * 0.25)} - (#{$gutter} - (#{$gutter} / 4)));}
      .#{$breakpoint}one-sixth { width: calc(#{percentage(math.div(1, 6))} - (#{$gutter} - (#{$gutter} / 6)));}
      .#{$breakpoint}one-seventh { width: calc(#{percentage(math.div(1, 7))} - (#{$gutter} - (#{$gutter} / 7)));}

      .#{$breakpoint}two { width: calc(#{percentage(math.div(2, 16))} - (#{$gutter} - (#{$gutter} / 8)));}
      .#{$breakpoint}four { width: calc(#{percentage(math.div(4, 16))} - (#{$gutter} - (#{$gutter} / 4)));}
      .#{$breakpoint}seven { width: calc(#{percentage(math.div(7, 16))} - (#{$gutter} - (#{$gutter} / 2)));}
      .#{$breakpoint}eight { width: calc(#{percentage(math.div(8, 16))} - (#{$gutter} / 2));}
      .#{$breakpoint}nine { width: calc(#{percentage(math.div(9, 16))} - (#{$gutter} - (#{$gutter} / 2)));}
    }

    // Remove side gutter on all columns

    .has-no-side-gutter {

      &.has-background {
        padding-right: 0px;
        padding-left: 0px;
      }

      .#{$breakpoint}one-whole,
      .#{$breakpoint}one-half,
      .#{$breakpoint}eight,
      .#{$breakpoint}one-third,
      .#{$breakpoint}two-thirds,
      .#{$breakpoint}one-fourth,
      .#{$breakpoint}four,
      .#{$breakpoint}one-fifth,
      .#{$breakpoint}three-fifths,
      .#{$breakpoint}two-fifths,
      .#{$breakpoint}one-sixth,
      .#{$breakpoint}one-seventh,
      .#{$breakpoint}one-eighth,
      .#{$breakpoint}two {
        margin-right: 0;
        margin-left: 0;
      }

      .#{$breakpoint}one-whole { width: 100%;}
      .#{$breakpoint}one-half { width: percentage(1 * 0.5);}
      .#{$breakpoint}one-third { width: percentage(math.div(1, 3));}
      .#{$breakpoint}one-fourth { width: percentage(1 * 0.25);}
      .#{$breakpoint}one-fifth { width: percentage(1 * 0.2);}
      .#{$breakpoint}two-fifths { width: percentage(2 * 0.2);}
      .#{$breakpoint}three-fifths { width: percentage(3 * 0.2);}
      .#{$breakpoint}one-sixth { width: percentage(math.div(1, 6));}
      .#{$breakpoint}one-seventh { width: percentage(math.div(1, 7));}
      .#{$breakpoint}one-eighth { width: percentage(1 * 0.125);}
      .#{$breakpoint}two-thirds { width: percentage(math.div(2, 3));}

      .#{$breakpoint}two { width: percentage(math.div(2, 16));}
      .#{$breakpoint}four { width: percentage(math.div(4, 16));}
      .#{$breakpoint}seven { width: percentage(math.div(7, 16));}
      .#{$breakpoint}eight { width: percentage(math.div(8, 16));}
      .#{$breakpoint}nine { width: percentage(math.div(9, 16));}
    }
}

/*================ Build Base Grid Classes ================*/
@include container-column-generator();
@include responsive-display-helper();
@include responsive-text-align-helper();

/*============================================================================
  Generate breakpoint-specific column widths and push classes
    - Default column widths: $breakpoint-has-widths: ($small, $medium-up);
    - Default is no push classes
    - Will not work if `styles/global/grid.scss` is removed
==============================================================================*/
$breakpoint-has-widths: ($large-down, $medium-down, $small-down);
$breakpoint-has-push: ();

/*================ Build Responsive Grid Classes ================*/
@each $breakpoint in $breakpoint-has-widths {
  @include respond-to($breakpoint) {
    @include container-column-generator('#{$breakpoint}--');
    @include responsive-display-helper('#{$breakpoint}--');
    @include responsive-text-align-helper('#{$breakpoint}--');
  }
}

/*================ Build Grid Push Classes ================*/
@each $breakpoint in $breakpoint-has-push {
  @include respond-to($breakpoint) {
    @include grid-push-generator('#{$breakpoint}--');
  }
}
